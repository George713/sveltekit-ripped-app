// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "postgres://postgres.cdswqmabrloxyfswpggl:<PASSWORD>@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1"
  directUrl = "postgres://postgres.cdswqmabrloxyfswpggl:<PASSWORD>!@aws-0-eu-central-1.pooler.supabase.com:5432/postgres?pgbouncer=true&connection_limit=1"
  // url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id            String @id @default(uuid())
  username      String @unique
  passwordHash  String
  userAuthToken String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pointBalance   Int             @default(0)
  calorieTargets CalorieTarget[]

  // Foods
  foodItems FoodItem[]

  // Measurements
  weights          Weight[]
  bodyfats         BodyFat[]
  progressPictures ProgressPicture[]

  // Daily progress
  dailyPlanned Boolean @default(false)
  dailyEaten   Boolean @default(false)

  // Progress Player Journey
  initBF       Boolean @default(false)
  initPhoto    Boolean @default(false)
  initCalories Boolean @default(false)
}

model Weight {
  id        Int      @id @default(autoincrement())
  weight    Float
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model BodyFat {
  id        Int      @id @default(autoincrement())
  bodyfat   Float
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model ProgressPicture {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model CalorieTarget {
  id        Int      @id @default(autoincrement())
  calories  Int
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model FoodItem {
  id          Int    @id @default(autoincrement())
  itemName    String
  kcal        Int
  protein     Int
  portionSize Float

  intendedAmount Int @default(0)
  eatenAmount    Int @default(0)

  user   User   @relation(fields: [userId], references: [id])
  userId String
}
